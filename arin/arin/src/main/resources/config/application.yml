spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://host.docker.internal:3306/arin
    username: arin
    password: arin0000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: profile, email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  redis:
    host: localhost
    port: 6379
    timeout: 2000
jwt:
  secret: 6666666666666666666666666666666666666666666666666666666666666666666666666666666666
  expiration: 3600000  # 1시간 (ms 기준)
  refresh-expiration: 604800000  # 7일 (Refresh Token)
app:
  oauth2:
    redirect-uri: http://localhost:5173/oauth/success-popup
    allowed-origins:
      - http://localhost:5173
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: INFO
springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false
proxy:
  prefix: /api/proxy
  upstream: http://fastapi:8000
  connect-timeout-ms: 3000
  read-timeout-ms: 5000

